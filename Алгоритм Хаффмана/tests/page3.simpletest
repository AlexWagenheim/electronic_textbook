[Test]
Programm=SimpleTest
Version=0.1
TestName=Алгоритм Хаффмана
Author=Вагенгейм Александр
MessageOnComplete=Тест завершен!
AllowFinish=0
ShowResult=1
DisableOpenTest=1
ExitOnComplete=0
LastQ=4

[Q0]
QLabel=Что такое кодирование Хаффмана?
LastA=4
A0=*Метод сжатия данных без потерь информации
A1=Метод шифрования данных
A2=Метод сортировки символов
A3=Метод поиска кратчайшего пути в графе
A4=Метод построения оптимального дере

[Q1]
QLabel=Какой принцип лежит в основе работы алгоритма Хаффмана?
LastA=4
A0=Символы с меньшей частотой получают более длинные коды
A1=*Символы с большей частотой получают короткие коды
A2=Все символы получают одинаковые длины кодов
A3=Коды строятся случайным образом
A4=Коды зависят от порядка следования символов в тексте

[Q2]
QLabel=Каким образом происходит построение дерева Хаффмана?
LastA=4
A0=С помощью метода динамического программирования
A1=Путем последовательной вставки узлов в дерево
A2=*Путём объединения двух наименее вероятных символов на каждой итерации
A3=Путей выбора наиболее частого символа на каждой стадии
A4=Путёи построения бинарного дерева поиска

[Q3]
QLabel=Может ли код Хаффмана содержать префикс одного кода внутри другого?
LastA=4
A0=Да, это возможно
A1=*Нет, коды должны быть уникальными
A2=Это зависит от типа данных
A3=Это определяется длиной сообщения
A4=Это возможно только для изображений

[Q4]
QLabel=Какая особенность алгоритма Хаффмана делает его эффективным методом сжатия текстов?
LastA=4
A0=*Использование статистики частоты появления символов
A1=Применение криптографических методов
A2=Использование хеш-таблиц
A3=Обработка каждого символа отдельно
A4=Разделение файла на блоки фиксированного размера

